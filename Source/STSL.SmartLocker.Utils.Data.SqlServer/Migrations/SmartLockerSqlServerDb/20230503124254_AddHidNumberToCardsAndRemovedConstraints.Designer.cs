// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using STSL.SmartLocker.Utils.Data.Contexts;
using STSL.SmartLocker.Utils.Data.SqlServer.Contexts;

#nullable disable

namespace STSL.SmartLocker.Utils.Data.SqlServer.Migrations.SmartLockerSqlServerDb
{
    [DbContext(typeof(SmartLockerSqlServerDbContext))]
    [Migration("20230503124254_AddHidNumberToCardsAndRemovedConstraints")]
    partial class AddHidNumberToCardsAndRemovedConstraints
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("slk")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("STSL.SmartLocker.Utils.Data.StoredProcedures.Results.ListAuditRecordsForLocker_Result", b =>
                {
                    b.Property<long>("RowNum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RowNum"));

                    b.Property<string>("AuditCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuditDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AuditTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AuditType")
                        .HasColumnType("int");

                    b.Property<int>("LockSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Object")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjectSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubjectSN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RowNum");

                    b.ToTable("ListAuditRecordsForLocker_Results", "slk", t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Data.Views.LockersWithStatus_View", b =>
                {
                    b.Property<Guid>("LockerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Battery")
                        .HasColumnType("decimal(4,3)");

                    b.Property<int?>("BoundaryAddress")
                        .HasColumnType("int");

                    b.Property<byte?>("LastAudit")
                        .HasColumnType("tinyint");

                    b.Property<string>("LastAuditCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAuditDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAuditObject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAuditObjectSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAuditSubject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastAuditSubjectSN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastAuditTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastCommunication")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LockFirmwareVersion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LockOperatingMode")
                        .HasColumnType("int");

                    b.Property<int>("LockSerialNumber")
                        .HasColumnType("int");

                    b.Property<string>("Locker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("LockerBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LockerId");

                    b.ToTable((string)null);

                    b.ToView("LockersWithStatus", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.CardCredential", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CardCredentialId");

                    b.Property<Guid?>("CardHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardLabel")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("CardType")
                        .HasColumnType("int");

                    b.Property<string>("HidNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CardHolderId");

                    b.HasIndex("SerialNumber")
                        .IsUnique()
                        .HasFilter("[SerialNumber] IS NOT NULL");

                    b.HasIndex("TenantId");

                    b.ToTable("CardCredentials", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.CardHolder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CardHolderId");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UniqueIdentifier")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("TenantId", "UniqueIdentifier")
                        .IsUnique()
                        .HasFilter("[UniqueIdentifier] IS NOT NULL");

                    b.ToTable("CardHolders", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationId");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "Name")
                        .IsUnique();

                    b.ToTable("Locations", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Lock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LockId");

                    b.Property<string>("FirmwareVersion")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTimeOffset>("InstallationDateUtc")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid?>("LockerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("OperatingMode")
                        .HasColumnType("int");

                    b.Property<int>("SerialNumber")
                        .HasColumnType("int");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LockerId")
                        .IsUnique()
                        .HasFilter("[LockerId] IS NOT NULL");

                    b.HasIndex("SerialNumber")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Locks", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Locker", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LockerId");

                    b.Property<DateTime?>("AbsoluteLeaseExpiry")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HasTenant")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("LockerBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ServiceTag")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LockerBankId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "ServiceTag")
                        .IsUnique()
                        .HasFilter("[ServiceTag] IS NOT NULL");

                    b.HasIndex("TenantId", "LockerBankId", "Label")
                        .IsUnique();

                    b.ToTable("Lockers", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LockerBankId");

                    b.Property<int>("Behaviour")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("DefaultLeaseDuration")
                        .HasColumnType("time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("LocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("TenantId");

                    b.HasIndex("TenantId", "LocationId", "Name")
                        .IsUnique();

                    b.ToTable("LockerBanks", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBankAdmin", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LockerBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardHolderId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "LockerBankId", "CardHolderId");

                    b.HasIndex("CardHolderId");

                    b.HasIndex("LockerBankId");

                    b.HasIndex("TenantId");

                    b.ToTable("LockerBankAdmins", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBankCardCredential", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LockerBankId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardCredentialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "LockerBankId", "CardCredentialId");

                    b.HasIndex("CardCredentialId");

                    b.HasIndex("LockerBankId");

                    b.HasIndex("TenantId");

                    b.ToTable("LockerBankCardCredentials", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerCardCredential", b =>
                {
                    b.Property<Guid>("TenantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LockerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardCredentialId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TenantId", "LockerId", "CardCredentialId");

                    b.HasIndex("CardCredentialId");

                    b.HasIndex("LockerId");

                    b.HasIndex("TenantId");

                    b.ToTable("LockerCardCredentials", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.StringifiedLockOperatingMode", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Value");

                    b.ToTable("StringifiedLockOperatingMode", "slk");

                    b.HasData(
                        new
                        {
                            Value = 0,
                            Name = "Installation"
                        },
                        new
                        {
                            Value = 1,
                            Name = "Shared"
                        },
                        new
                        {
                            Value = 2,
                            Name = "Dedicated"
                        },
                        new
                        {
                            Value = 3,
                            Name = "Confiscated"
                        },
                        new
                        {
                            Value = 4,
                            Name = "Reader"
                        });
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.StringifiedLockerBankBehaviour", b =>
                {
                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Value");

                    b.ToTable("StringifiedLockerBankBehaviour", "slk");

                    b.HasData(
                        new
                        {
                            Value = 0,
                            Name = "Unset"
                        },
                        new
                        {
                            Value = 1,
                            Name = "Permanent"
                        },
                        new
                        {
                            Value = 2,
                            Name = "Temporary"
                        });
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Tenant", b =>
                {
                    b.Property<Guid>("TenantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CardHolderAlias")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("TenantId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Tenants", "slk");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.CardCredential", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.CardHolder", "CardHolder")
                        .WithMany("CardCredentials")
                        .HasForeignKey("CardHolderId");

                    b.Navigation("CardHolder");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Lock", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.Locker", "Locker")
                        .WithOne("Lock")
                        .HasForeignKey("STSL.SmartLocker.Utils.Domain.Lock", "LockerId");

                    b.Navigation("Locker");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Locker", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.LockerBank", "LockerBank")
                        .WithMany("Lockers")
                        .HasForeignKey("LockerBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LockerBank");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBank", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.Location", "Location")
                        .WithMany("LockerBanks")
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBankAdmin", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.CardHolder", "CardHolder")
                        .WithMany()
                        .HasForeignKey("CardHolderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STSL.SmartLocker.Utils.Domain.LockerBank", "LockerBank")
                        .WithMany("Admins")
                        .HasForeignKey("LockerBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardHolder");

                    b.Navigation("LockerBank");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBankCardCredential", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.CardCredential", "CardCredential")
                        .WithMany("LockerBankCardCredentials")
                        .HasForeignKey("CardCredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STSL.SmartLocker.Utils.Domain.LockerBank", "LockerBank")
                        .WithMany("CardCredentials")
                        .HasForeignKey("LockerBankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardCredential");

                    b.Navigation("LockerBank");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerCardCredential", b =>
                {
                    b.HasOne("STSL.SmartLocker.Utils.Domain.CardCredential", "CardCredential")
                        .WithMany("LockCardCredentials")
                        .HasForeignKey("CardCredentialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("STSL.SmartLocker.Utils.Domain.Locker", "Locker")
                        .WithMany("CardCredentials")
                        .HasForeignKey("LockerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CardCredential");

                    b.Navigation("Locker");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.CardCredential", b =>
                {
                    b.Navigation("LockCardCredentials");

                    b.Navigation("LockerBankCardCredentials");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.CardHolder", b =>
                {
                    b.Navigation("CardCredentials");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Location", b =>
                {
                    b.Navigation("LockerBanks");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.Locker", b =>
                {
                    b.Navigation("CardCredentials");

                    b.Navigation("Lock");
                });

            modelBuilder.Entity("STSL.SmartLocker.Utils.Domain.LockerBank", b =>
                {
                    b.Navigation("Admins");

                    b.Navigation("CardCredentials");

                    b.Navigation("Lockers");
                });
#pragma warning restore 612, 618
        }
    }
}
